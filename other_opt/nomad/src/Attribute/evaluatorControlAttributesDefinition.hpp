//////////// THIS FILE MUST BE CREATED BY EXECUTING WriteAttributeDefinitionFile ////////////
//////////// DO NOT MODIFY THIS FILE MANUALLY ///////////////////////////////////////////////

#ifndef __NOMAD_4_0_EVALUATORCONTROLATTRIBUTESDEFINITION__
#define __NOMAD_4_0_EVALUATORCONTROLATTRIBUTESDEFINITION__

_definition = {
{ "EVAL_OPPORTUNISTIC",  "bool",  "true",  " Opportunistic strategy: Terminate evaluations as soon as a success is found ",  " \n  \n . Opportunistic strategy: Terminate evaluations as soon as a success is found \n  \n . This parameter is the default value for other OPPORTUNISTIC parameters, \n    including Search steps \n  \n . This parameter is the value used for Poll step \n  \n . Argument: one boolean (yes or no) \n  \n . Type 'nomad -h opportunistic' to see advanced options \n  \n . Example: EVAL_OPPORTUNISTIC no  # complete evaluations \n  \n . Default: true\n\n",  "  advanced opportunistic oppor eval evals evaluation evaluations terminate list success successes  "  , "true" , "true" , "true" },
{ "EVAL_SURROGATE_OPTIMIZATION",  "bool",  "false",  " Use static surrogate as blackbox for optimization ",  " \n  . Use solely static surrogate instead of the blackbox for optimization. \n  \n  . In batch mode, SURROGATE_EXE needs to be defined. \n  \n  . In library mode, an Evaluator for SURROGATE eval type needs to be defined. \n  \n  . Argument: bool \n  \n  . Example: EVAL_SURROGATE_OPTIMIZATION true \n  \n  . See also: SURROGATE_EXE, MAX_SURROGATE_EVAL_OPTIMIZATION \n  \n . Default: false\n\n",  "  advanced static surrogate  "  , "true" , "false" , "true" },
{ "EVAL_USE_CACHE",  "bool",  "true",  " Use cache in algorithms ",  " \n . When this parameter is false, the Cache is not used at all. Points may be \n   re-evaluated. \n  \n . Recommended when DIMENSION is large and evaluations are not costly. \n  \n . Cache may be used for top algorithm, and disabled for a sub-algorithm. \n  \n . If CACHE_FILE is non-empty, cache file will still be read and written. \n  \n . Default: true\n\n",  "  advanced  "  , "true" , "false" , "true" },
{ "PSD_MADS_SUBPROBLEM_MAX_BB_EVAL",  "size_t",  "INF",  " Max number of evaluations for each subproblem ",  " \n  \n . Used in the context of Parallel Space Decomposition (PSD) MADS algorithm. \n  \n . Select the max number of evaluations in each Mads subproblem. \n  \n . Argument: size_t \n  \n . Example: PSD_MADS_SUBPROBLEM_MAX_BB_EVAL 10 \n  \n . Default: INF\n\n",  "  advanced psd mads parallel decomposition subproblem  "  , "true" , "false" , "true" },
{ "SSD_MADS_SUBPROBLEM_MAX_BB_EVAL",  "size_t",  "INF",  " Max number of evaluations for each subproblem ",  " \n . Used in the context of Sequential Space Decomposition (SSD) MADS algorithm. \n  \n . Select the max number of evaluations in each Mads subproblem. \n  \n . Argument: size_t \n  \n . Example: SSD_MADS_SUBPROBLEM_MAX_BB_EVAL 10 \n  \n . Default: INF\n\n",  "  advanced ssd mads sequential decomposition subproblem  "  , "true" , "false" , "true" },
{ "SUBPROBLEM_MAX_BB_EVAL",  "size_t",  "INF",  " Internal parameter for PSD_MADS_SUBPROBLEM_MAX_BB_EVAL and SSD_MADS_SUBPROBLEM_MAX_BB_EVAL ",  " \n  \n . CANNOT BE MODIFIED BY USER. Internal parameter. \n  \n . Default: INF\n\n",  "  internal  "  , "false" , "false" , "true" } };

#endif
